name: ci
on:
  push:
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install development dependencies
      run: |
        go install github.com/google/addlicense@latest
    - name: Build
      run: make
    - name: Test
      run: make test
    - name: Check
      run: make check
    - name: Check Licenses
      run: make check-license
    - uses: actions/cache@v3
      id: goboring-cache
      with:
        path: /opt/goboring/
        key: ${{ runner.os }}-goboring-${{ hashFiles('/opt/goboring/go/VERSION') }}
        restore-keys: |
          ${{ runner.os }}-goboring-
    - name: Set up GoBoring
      if: steps.goboring-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p /opt/goboring
        cd /opt/goboring
        wget --no-verbose https://go-boringcrypto.storage.googleapis.com/go1.18b7.linux-amd64.tar.gz
        tar -xzvf go1.18b7.linux-amd64.tar.gz
        /opt/goboring/go/bin/go version
    - name: Build
      run: make GOBIN=/opt/goboring/go/bin/go CGO_ENABLED=1 GO_BUILD_ARGS='-v -tags "netgo fips" -trimpath' GO_LDFLAGS='-s -w -linkmode=external -extldflags=-static' static-build
      env:
        GOROOT: /opt/goboring/go
    - name: Test
      run: make GOBIN=/opt/goboring/go/bin/go CGO_ENABLED=1 GO_BUILD_ARGS='-v -tags "netgo fips" -trimpath' GO_LDFLAGS='-s -w -linkmode=external -extldflags=-static' test
      env:
        GOROOT: /opt/goboring/go
