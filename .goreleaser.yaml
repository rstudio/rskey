before:
  hooks:
  - go mod tidy
  - make notice
builds:
- env:
  - CGO_ENABLED=0
  flags:
  - -trimpath
  goos:
  - linux
  - windows
  - darwin
  ldflags:
  - -s -w
  mod_timestamp: '{{ .CommitTimestamp }}'
  tags:
  - netgo
archives:
- files:
  - LICENSE
  - README.md
  - NOTICE.md
  format_overrides:
  - goos: windows
    format: zip
blobs:
- provider: s3
  bucket: rstudio-platform-public-artifacts
  folder: "rskey/{{ .Version }}"
release:
  draft: true
  header: |
    `rskey` is a command-line tool (and bundled Go packages) that generates secret keys interoperable with the format used by RStudio's Workbench, Connect, and Package Manager products.

    ## Changes since v{{ .Version }}
  footer: |
    ## Binary signatures

    Binary releases are signed with [Sigstore](https://www.sigstore.dev/). You can verify these signatures with their `cosign` tool, for example:

    ``` shell
    $ COSIGN_EXPERIMENTAL=1 cosign verify-blob \
      --signature rskey_{{ .Version }}_linux_amd64.tar.gz.sig \
      rskey_{{ .Version }}_linux_amd64.tar.gz
    ```

    We use Cosign's ["keyless"](https://docs.sigstore.dev/cosign/openid_signing) mode, which uses the OpenID Connect tokens issued by GitHub for this repository and ephemeral certificates instead of private keys. This feature currently requires setting `COSIGN_EXPERIMENTAL=1`.
signs:
- cmd: cosign
  signature: "${artifact}.sig"
  args: ["sign-blob", "--output=${signature}", "${artifact}"]
  artifacts: all
source:
  enabled: true
